{"version":3,"sources":["components/Header/header.module.css","components/css.module.css","components/footerBar.module.css","components/Popup/popupMnu.module.css","serviceWorker.js","api/api.js","api/basket_api.js","redux/nodesReducer.js","redux/reduxStore.js","components/Shop/ShoppingItem.jsx","components/Shop/ShopingList.js","components/Basket/BasketItem.jsx","components/Basket/BasketList.js","components/FooterBar.js","components/Popup/PopupMnu.js","components/Header/Header.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","instanse","axios","baseURL","api","get","then","response","data","catch","e","node","post","id","delete","basket_api","basket","initialState","nodes","loading","isError","btnIsEnabled","nodesReducer","state","action","type","payload","filter","map","todo","selected","showError","showLoader","hideLoader","removeNodeAC","fetchNodes","fetchBasket","removeNode","dispatch","a","getNodes","Object","keys","key","addNode","name","getBasket","redusers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ShoppingItem","date","title","disableBtn","enableBtn","checkedToggle","addInBasket","cls","push","className","join","checked","onChange","onClick","preventDefault","ShopingList","props","useState","nodeIsEmpty","setNodeEmpty","useEffect","length","css","shoppingList","TransitionGroup","component","item","CSSTransition","classNames","timeout","noItem","BasketItem","removeBasket","BasketList","basketIsEmpty","setBasketEmpty","FooterBar","removeSelected","footerBarWrapper","footerBarBtnContainer","PopupMnu","isVisible","setVisible","mnuWrapper","mnuBtn","mnu","Header","len","todoTitle","setTodoTitle","titleContainer","linkWrapper","to","navlink","activeClassName","activeRoute","value","target","onKeyPress","AppContainer","compose","connect","checkedToggleAC","promises","Promise","all","getData","exact","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,WAAa,2BAA2B,MAAQ,sBAAsB,eAAiB,+BAA+B,YAAc,4BAA4B,QAAU,wBAAwB,YAAc,8B,mBCAlOD,EAAOC,QAAU,CAAC,mBAAqB,gCAAgC,qBAAuB,kCAAkC,OAAS,sB,mBCAzID,EAAOC,QAAU,CAAC,sBAAwB,yCAAyC,iBAAmB,sC,mBCAtGD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,OAAS,yBAAyB,IAAM,wB,qLCWhFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iEChBAC,EAAWC,SAAa,CAC1BC,QAAS,4CAIAC,EAAM,WAGX,OAAQH,EAASI,IAAT,eACCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACH,OAAO,MANdN,EAAM,SAUPO,GACJ,OAAOV,EAASW,KAAT,cAA6BD,GAC3BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACH,OAAO,MAddN,EAAM,SAkBJS,GACP,OAAOZ,EAASa,OAAT,iBAA0BD,EAA1B,UACEP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACH,OAAO,MC3BrBT,EAAWC,SAAa,CAC1BC,QAAS,4CAIAY,EAAa,WAGlB,OAAQd,EAASI,IAAT,gBACCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACH,OAAO,MANdK,EAAa,SAUZC,GACN,OAAOf,EAASW,KAAT,eAA8BI,GAC5BV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACH,OAAO,MAddK,EAAa,SAkBTF,GACT,OAAOZ,EAASa,OAAT,kBAA2BD,EAA3B,UACEP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACH,OAAO,MCPrBO,EAAe,CACjBC,MAAO,GACPF,OAAQ,GACRG,SAAS,EACTC,SAAS,EACTC,cAAc,GA+FHC,EA1FM,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACnD,OAAQA,EAAOC,MAEX,IAhBW,aAiBP,OAAO,eACAF,EADP,CAEIF,cAAc,IAGtB,IAvBY,cAwBR,OAAO,eACAE,EADP,CAEIF,cAAc,IAKtB,IApCc,gBAqCV,OAAO,eACAE,EADP,CAEIP,OAAO,GAAD,mBAAMO,EAAMP,QAAZ,CAAoBQ,EAAOE,YAEzC,IAxCa,eAyCT,OAAO,eACAH,EADP,CAEIP,OAAQQ,EAAOE,UAGvB,IA7Cc,gBA8CV,OAAO,eACAH,EADP,CAEIP,OAAQO,EAAMP,OAAOW,QAAO,SAAAhB,GAAI,OAAIA,EAAKE,KAAOW,EAAOE,aAM/D,IAlES,WAmEL,OAAO,eACAH,EADP,CAEIL,MAAM,GAAD,mBAAMK,EAAML,OAAZ,CAAmBM,EAAOE,YAEvC,IAtEO,SAwEH,OAAO,eACAH,EADP,CAEIL,MAAOK,EAAML,MAAMU,KAAI,SAACC,GAKpB,OAJIA,EAAKhB,KAAOW,EAAOE,UACnBG,EAAKC,UAAYD,EAAKC,UAGnBD,OAGnB,IAjFY,cAkFR,OAAO,eACAN,EADP,CAEIL,MAAOK,EAAML,MAAMS,QAAO,SAAAhB,GAAI,OAAIA,EAAKE,KAAOW,EAAOE,aAG7D,IAtFY,cAuFR,OAAO,eACAH,EADP,CAEIJ,SAAS,IAGjB,IA3FY,cA4FR,OAAO,eACAI,EADP,CAEIJ,SAAS,IAGjB,IAhGY,cAiGR,OAAO,eACAI,EADP,CAEIL,MAAOM,EAAOE,UAGtB,IArGW,aAsGP,OAAO,eACAH,EADP,CAEIH,SAAS,IAGjB,QACI,OAAOG,IAaNQ,EAAY,iBAAO,CAAEN,KAAM,eAC3BO,EAAa,iBAAO,CAAEP,KAAM,gBAC5BQ,EAAa,iBAAO,CAAER,KAAM,gBAEnCS,EAAe,SAACrB,GAAD,MAAS,CAAEY,KAAM,cAAeC,QAASb,IACxDsB,EAAa,SAACjB,GAAD,MAAY,CAAEO,KAAM,cAAeC,QAASR,IAIzDkB,EAAc,SAACpB,GAAD,MAAa,CAAES,KAAM,eAAgBC,QAASV,IAwBrDqB,EAAa,SAACxB,GAAD,8CAAQ,WAAOyB,GAAP,eAAAC,EAAA,sEAEPnC,EAAeS,GAFR,OAExBN,EAFwB,OAK1B+B,EADa,OAAb/B,EACS2B,EAAarB,GAtCE,CAAEY,KAAM,eAiCN,2CAAR,uDAmCbe,EAAW,yDAAM,WAAOF,GAAP,iBAAAC,EAAA,6DAE1BD,EArE6B,CAAEb,KAAM,gBAmEX,SAIFrB,IAJE,QAInBG,EAJmB,SAOhBW,EAAQuB,OAAOC,KAAKnC,GAAUqB,KAAI,SAAAe,GACpC,OAAO,eACApC,EAASoC,GADhB,CAEI9B,GAAI8B,OAGZL,EAASH,EAAWjB,IACpBoB,EAhFyB,CAAEb,KAAM,iBAmFb,OAAblB,EACP+B,EAtFwB,CAAEb,KAAM,eAuFb,OAAblB,GACN+B,EAtFyB,CAAEb,KAAM,gBAkEX,2CAAN,uDA0BXmB,EAAU,SAAClB,GAAD,8CAAa,WAAOY,GAAP,eAAAC,EAAA,sEAETnC,EAAYsB,GAFH,QAE1BnB,EAF0B,SAK5BmB,EAAQb,GAAKN,EAASsC,KACtBP,EAjGqB,CAAEb,KAAM,WAAYC,QAiGtBA,KAEnBY,EAtGwB,CAAEb,KAAM,eA8FJ,2CAAb,uDA+BVqB,EAAY,yDAAM,WAAOR,GAAP,iBAAAC,EAAA,6DAE3BD,EA9H6B,CAAEb,KAAM,gBA4HV,SAIJV,IAJI,QAIrBR,EAJqB,SAObS,EAASyB,OAAOC,KAAKnC,GAAUqB,KAAI,SAAAe,GACrC,OAAO,eACApC,EAASoC,GADhB,CAEI9B,GAAI8B,OAIZL,EAASF,EAAYpB,IACrBsB,EA1IqB,CAAEb,KAAM,iBA6IT,OAAblB,EACP+B,EAhJoB,CAAEb,KAAM,eAiJT,OAAblB,GACN+B,EAhJqB,CAAEb,KAAM,gBA2HV,2CAAN,uD,QC3PnBsB,EAAWC,YAAgB,CAC7B9B,MAAOI,IAML2B,EAAQC,YAAYH,EAAUI,YAAgBC,MAIpDvD,OAAOoD,MAAQA,EAEAA,Q,+BCwCAI,EArDM,SAAC,GAWZ,IATFC,EASC,EATDA,KAAMC,EASL,EATKA,MAAO1C,EASZ,EATYA,GAEb2C,GAOC,EARDC,UAQC,EAPDD,YACAnC,EAMC,EANDA,aAEAqC,GAIC,EALDrB,WAKC,EAJDqB,eACA5B,EAGC,EAHDA,SACA6B,EAEC,EAFDA,YAIEC,EAAM,CAAC,QAMb,OAJI9B,GACA8B,EAAIC,KAAK,YAIT,oCAKI,wBAAIC,UAAWF,EAAIG,KAAK,MAEpB,+BACI,2BACItC,KAAK,WACLuC,QAASlC,EACTmC,SAAU,SAACvD,GAAD,OAAOgD,EAAc7C,MAGnC,8BAAM,2BAAI0C,GAAV,IAAqB,+BAAQD,IAC7B,yBAAKQ,UAAS,+DAA0DzC,EAAe,GAAK,YACxF6C,QAAS,SAACxD,GACNA,EAAEyD,iBACFR,EAAY,CAAEJ,QAAO1C,OACrB2C,MAGJ,uBAAGM,UAAU,oCAAb,sB,iCCMTM,G,MA3CK,SAAC,GAA2C,IAAzClD,EAAwC,EAAxCA,MAAOE,EAAiC,EAAjCA,QAASD,EAAwB,EAAxBA,QAAYkD,EAAY,+CAEvBC,oBAAS,GAFc,mBAEpDC,EAFoD,KAEvCC,EAFuC,KAgB3D,OAZAC,qBAAU,WACc,IAAjBvD,EAAMwD,OACLF,GAAa,GAEZA,GAAa,KAEnB,CAACtD,EAAMwD,SAON,oCAGI,yBAAKZ,UAAWa,IAAIC,eACdxD,GAAWD,EACP,yBAAK2C,UAAU,YACb,yBAAKA,UAAU,mBAEhB1C,EAUGA,GAAW,+MATX,kBAACyD,EAAA,EAAD,CAAiBC,UAAU,KAAKhB,UAAU,aACvC5C,EAAMU,KAAI,SAAAmD,GAAI,OACX,kBAACC,EAAA,EAAD,CACIrC,IAAKoC,EAAKlE,GACVoE,WAAY,OACZC,QAAS,KACT,kBAAC,EAAD,iBAAkBH,EAAUV,SAI/CE,GAAe,yBAAKT,UAAWa,IAAIQ,QAApB,gHCTjBC,EAhCI,SAAC,GAAiC,IAA/B7B,EAA8B,EAA9BA,MAAO1C,EAAuB,EAAvBA,GAAIwE,EAAmB,EAAnBA,aAO7B,OAEI,wBAAIvB,UAPI,CAAC,OAAQ,UAOEC,KAAK,MACpB,+BAEI,8BAAM,2BAAIR,IAEV,yBAAKO,UAAU,uDACXI,QAAS,SAACxD,GACNA,EAAEyD,iBACFkB,EAAa,CAAC9B,QAAO1C,KAAIiB,UAAU,MAKvC,uBAAGgC,UAAU,oCAAb,YCmBLwB,EAtCI,SAAC,GAA4C,IAA1ClE,EAAyC,EAAzCA,QAASD,EAAgC,EAAhCA,QAASH,EAAuB,EAAvBA,OAAWqD,EAAY,gDAGnBC,oBAAS,GAHU,mBAGpDiB,EAHoD,KAGrCC,EAHqC,KAc3D,OARAf,qBAAU,WACe,IAAlBzD,EAAO0D,OACNc,GAAe,GAEfA,GAAe,KAEpB,CAACxE,EAAO0D,SAGP,oCACI,yBAAKZ,UAAWa,IAAIC,eACdxD,GAAWD,EACP,yBAAK2C,UAAU,YACb,yBAAKA,UAAU,mBAEhB1C,EAUG,+MATA,kBAACyD,EAAA,EAAD,CAAiBC,UAAU,KAAKhB,UAAU,aACvC9C,EAAOY,KAAI,SAAAmD,GAAI,OACZ,kBAACC,EAAA,EAAD,CACIrC,IAAKoC,EAAKlE,GACVoE,WAAY,OACZC,QAAS,KACT,kBAAC,EAAD,iBAAgBH,EAAUV,SAIzCkB,GAAiB,yBAAKzB,UAAWa,IAAIQ,QAApB,gF,iBCAvBM,EApCG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,eAAgBxE,EAAY,EAAZA,MACjC,OAEI,yBAAK4C,UAAWa,IAAIgB,kBAChB,yBAAK7B,UAAU,aAEX,yBAAKA,UAAWa,IAAIiB,uBAChB,yBAAK9B,UAAU,0CACXI,QAAS,SAACxD,GACNA,EAAEyD,iBACFuB,EAAexE,KAGnB,uBAAG4C,UAAU,kCAAb,oBAKR,yBAAKA,UAAWa,IAAIiB,uBAChB,yBAAK9B,UAAU,0CACXI,QAAS,SAACxD,GACNA,EAAEyD,iBACFuB,EAAexE,KAGnB,uBAAG4C,UAAU,kCAAb,mB,iBCKT+B,GA5BE,SAAC,GAA6B,IAA5BH,EAA2B,EAA3BA,eAAgBxE,EAAW,EAAXA,MAAW,EACVoD,oBAAS,GADC,mBACnCwB,EADmC,KACxBC,EADwB,KAI1C,OACI,yBAAKjC,UAAWa,IAAIqB,YAChB,yBAAKlC,UAAWa,IAAIsB,OAAQ/B,QAAS,kBAAM6B,GAAYD,KACnD,uBAAGhC,UAAU,6BAAb,SAEHgC,GACG,yBAAKhC,UAAWa,IAAIuB,KACpB,4BACI,4BAAI,uBAAGpC,UAAU,mCAAb,kBAAJ,6FACA,4BAAI,uBAAGA,UAAU,mCAAb,cAAJ,2EACA,wBAAII,QAAS,kBAAMwB,EAAexE,KAAQ,uBAAG4C,UAAU,mCAAb,UAA1C,+GACA,4BAAI,uBAAGA,UAAU,mCAAb,kBAAJ,6FACA,4BAAI,uBAAGA,UAAU,mCAAb,kBAAJ,uG,6BCkELqC,GAhEA,SAAC,GAAgC,IAA9BvD,EAA6B,EAA7BA,QAASwD,EAAoB,EAApBA,IAAQ/B,EAAY,mCAEXC,mBAAS,IAFE,mBAEtC+B,EAFsC,KAE3BC,EAF2B,KAqB7C,OACE,oCACE,yBAAKxC,UAAU,SACb,yBAAKA,UAAU,aAEb,kBAAC,GAAaO,GAEd,yBAAKP,UAAWa,KAAI4B,gBAClB,yBAAKzC,UAAWa,KAAI6B,aAClB,kBAAC,KAAD,CAASC,GAAG,QAAQ3C,UAAWa,KAAI+B,QAASC,gBAAiBhC,KAAIiC,aAAjE,8CAEU,kCAAQR,EAAIlF,MAAZ,OAGZ,yBAAK4C,UAAWa,KAAI6B,aAClB,kBAAC,KAAD,CAASC,GAAG,UAAU3C,UAAWa,KAAI+B,QAASC,gBAAiBhC,KAAIiC,aAAnE,8CAEU,kCAAQR,EAAIpF,OAAZ,QAMd,yBAAK8C,UAAU,eACb,2BACEA,UAAU,aACV+C,MAAOR,EACPpC,SAAU,SAAAvD,GAAC,OAAI4F,EAAa5F,EAAEoG,OAAOD,QACrCE,WA7CI,SAACrG,GACD,UAAVA,EAAEiC,MAEc,KAAd0D,IAMFzD,EALgB,CACdW,MAAO8C,EAEPvE,UAAU,IAGZwE,EAAa,OAoCP7E,KAAK,SAEP,kH,SCGGuF,GAtBMC,YAEnBC,aAbsB,SAAC3F,GAAD,MACtB,CACEL,MAAOK,EAAML,MAAMA,MACnBF,OAAQO,EAAML,MAAMF,OACpBG,QAASI,EAAML,MAAMC,QACrBC,QAASG,EAAML,MAAME,QACrBC,aAAcE,EAAML,MAAMG,gBAQ1B,CACEmB,WACAR,aACAC,aACAyB,cTgGuB,SAAC7C,GAAD,OAAQ,SAACyB,GAClCA,EA/BoB,SAACzB,GAAD,MAAS,CAAEY,KAAM,SAAUC,QAASb,GA+B/CsG,CAAgBtG,MShGvB+B,UACAP,aACAN,YACA2D,eT4GwB,SAACxE,GAAD,OAAW,SAACoB,GAEtC,sBAAC,4BAAAC,EAAA,6DACS6E,EAAWlG,EAAMU,KAAI,SAAAjB,GACnBA,EAAKmB,UACY1B,EAAeO,EAAKE,IAC5BP,MAAK,SAAAC,GAEN+B,EADa,OAAb/B,EACS2B,EAAavB,EAAKE,IArDnB,CAAEY,KAAM,kBA4D5B,OAAOd,KAbd,SAeS0G,QAAQC,IAAIF,GAfrB,0CAAD,KS7GEzD,YT4KqB,SAACjC,GAAD,8CAAa,WAAOY,GAAP,SAAAC,EAAA,sEAEbxB,EAAqBW,GAFR,eAMhCY,EA5GyB,CAAEb,KAAM,gBAAiBC,QA4G3BA,IACvBY,EAASD,EAAWX,EAAQb,KAC5ByB,EA1HmB,CAAEb,KAAM,gBA4H3Ba,EAxHwB,CAAEb,KAAM,eA8GA,2CAAb,uDS3KrBqB,YACAyE,QToFiB,kBAAM,SAACjF,GAC1BA,EAASE,KACTF,EAASQ,OSrFPuC,aTiNsB,SAAC3D,GAAD,8CAAa,WAAOY,GAAP,SAAAC,EAAA,sEAEdxB,EAAwBW,EAAQb,IAFlB,OAIpB,OAJoB,QAKjCyB,EAjJwB,CAAEb,KAAM,gBAAiBC,QAiJzBA,EAAQb,KAChCyB,EAASM,EAAQlB,KAIjBY,EAhKwB,CAAEb,KAAM,eAsJC,2CAAb,uDShNtBgC,UTyEmB,kBAAM,SAACnB,GAC5BA,EApBuB,CAAEb,KAAM,iBSrD7B+B,WT4EoB,kBAAM,SAAClB,GAC7BA,EAvBwB,CAAEb,KAAM,oBSvEfwF,EA3CT,SAAC,GAA2B,IAAzBM,EAAwB,EAAxBA,QAAYlD,EAAY,2BAErCI,qBAAU,WACR8C,MAEC,IAEH,IAAMnB,EAAM,CACVlF,MAAOmD,EAAMnD,MAAMwD,OACnB1D,OAAQqD,EAAMrD,OAAO0D,QAGvB,OACE,oCACE,kBAAC,GAAD,eAAQ0B,IAAKA,GAAS/B,IAEtB,yBAAKP,UAAU,oBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO0D,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,KAAD,CAAUjB,GAAI,aAClD,kBAAC,KAAD,CAAOe,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAgBrD,MACzD,kBAAC,KAAD,CAAOmD,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,EAAerD,MAC1D,kBAAC,KAAD,CAAOoD,KAAK,KAAKC,OAAQ,kBAAM,kBAAC,KAAD,CAAUjB,GAAI,cAE/C,yBAAK3C,UAAU,yBAGjB,kBAAC,EAAD,CAAW4B,eAAgBrB,EAAMqB,eAAgBxE,MAAOmD,EAAMnD,YC5BpEyG,IAASD,OACP,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAUzE,MAAOA,GACf,kBAAC,GAAD,QAGJ2E,SAASC,eAAe,SbkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1H,MAAK,SAAA2H,GACJA,EAAaC,gBAEdzH,OAAM,SAAA0H,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.aece609f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mnuWrapper\":\"header_mnuWrapper__jbqZa\",\"title\":\"header_title__1ssEM\",\"titleContainer\":\"header_titleContainer__2zdlQ\",\"linkWrapper\":\"header_linkWrapper__Zv_b3\",\"navlink\":\"header_navlink__2FNCU\",\"activeRoute\":\"header_activeRoute__1FSpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shoppingListHeader\":\"css_shoppingListHeader__2RMvF\",\"shoppingBasketHeader\":\"css_shoppingBasketHeader__1uPT9\",\"noItem\":\"css_noItem__3I_WZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerBarBtnContainer\":\"footerBar_footerBarBtnContainer__2GF8e\",\"footerBarWrapper\":\"footerBar_footerBarWrapper__1NwMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mnuWrapper\":\"popupMnu_mnuWrapper__3Xsgc\",\"mnuBtn\":\"popupMnu_mnuBtn__3CPSF\",\"mnu\":\"popupMnu_mnu__1R9q5\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://react-todo-952bc.firebaseio.com'\r\n});\r\n\r\n\r\nexport const api = {\r\n\r\n    fetchNodes() {\r\n        return  instanse.get(`/nodes.json`)\r\n                .then(response => response.data)\r\n                .catch(e => {\r\n                    return false;\r\n                })\r\n    },\r\n\r\n    addNode(node) {\r\n        return instanse.post(`/nodes.json`, node)\r\n                .then(response => response.data)\r\n                .catch(e => {\r\n                    return false;\r\n                }) \r\n    },\r\n    \r\n    removeNode(id) {\r\n        return instanse.delete(`/nodes/${id}.json`)\r\n                .then(response => response.data)\r\n                .catch(e => {\r\n                    return false;\r\n                })\r\n    }\r\n}\r\n","import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    baseURL: 'https://react-todo-952bc.firebaseio.com'\r\n});\r\n\r\n\r\nexport const basket_api = {\r\n\r\n    fetchBasket() {\r\n        return  instanse.get(`/basket.json`)\r\n                .then(response => response.data)\r\n                .catch(e => {\r\n                    return false;\r\n                })\r\n    },\r\n\r\n    addBasket(basket) {\r\n        return instanse.post(`/basket.json`, basket)\r\n                .then(response => response.data)\r\n                .catch(e => {\r\n                    return false;\r\n                }) \r\n    },\r\n    \r\n    removeBasket(id) {\r\n        return instanse.delete(`/basket/${id}.json`)\r\n                .then(response => response.data)\r\n                .catch(e => {\r\n                    return false;\r\n                })\r\n    }\r\n}\r\n","import { api } from './../api/api';\r\nimport { basket_api } from './../api/basket_api';\r\n\r\nconst ADD_NODE = 'ADD_NODE';\r\nconst TOGGLE = 'TOGGLE';\r\nconst REMOVE_NODE = 'REMOVE_NODE';\r\nconst SHOW_LOADER = 'SHOW_LOADER';\r\nconst HIDE_LOADER = 'HIDE_LOADER';\r\nconst FETCH_NODES = 'FETCH_NODES';\r\nconst SHOW_ERROR = 'SHOW_ERROR';\r\n\r\n\r\n\r\nconst ADD_IN_BASKET = 'ADD_IN_BASKET';\r\nconst FETCH_BASKET = 'FETCH_BASKET';\r\nconst REMOVE_BASKET = 'REMOVE_BASKET';\r\n\r\n\r\nconst DISABLE_BTN = 'DISABLE_BTN';\r\nconst ENABLE_BTN = 'ENABLE_BTN';\r\n\r\n\r\nconst initialState = {\r\n    nodes: [],\r\n    basket: [],\r\n    loading: false,\r\n    isError: false,\r\n    btnIsEnabled: true\r\n}\r\n\r\n\r\n\r\nconst nodesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ENABLE_BTN:\r\n            return {\r\n                ...state,\r\n                btnIsEnabled: true\r\n            }\r\n        \r\n        case DISABLE_BTN:\r\n            return {\r\n                ...state,\r\n                btnIsEnabled: false\r\n            }\r\n\r\n       // ------------------- basket -------------------------\r\n\r\n        case ADD_IN_BASKET:\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.payload]\r\n            }\r\n        case FETCH_BASKET: {\r\n            return {\r\n                ...state,\r\n                basket: action.payload\r\n            }\r\n        }\r\n        case REMOVE_BASKET:\r\n            return {\r\n                ...state,\r\n                basket: state.basket.filter(node => node.id !== action.payload)\r\n            }\r\n\r\n       \r\n        // ------------------- nODES -------------------------\r\n       \r\n        case ADD_NODE:\r\n            return {\r\n                ...state,\r\n                nodes: [...state.nodes, action.payload]\r\n            }\r\n        case TOGGLE:\r\n\r\n            return {\r\n                ...state,\r\n                nodes: state.nodes.map((todo) => {\r\n                    if (todo.id === action.payload) {\r\n                        todo.selected = !todo.selected;\r\n                        // console.log('todo', todo);\r\n                    }\r\n                    return todo;\r\n                })\r\n            }\r\n        case REMOVE_NODE:\r\n            return {\r\n                ...state,\r\n                nodes: state.nodes.filter(node => node.id !== action.payload)\r\n            }\r\n\r\n        case SHOW_LOADER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case HIDE_LOADER:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        case FETCH_NODES: {\r\n            return {\r\n                ...state,\r\n                nodes: action.payload\r\n            }\r\n        }\r\n        case SHOW_ERROR:\r\n            return {\r\n                ...state,\r\n                isError: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default nodesReducer;\r\n\r\n\r\n\r\nconst enableBtnAC = () => ({ type: 'ENABLE_BTN' });\r\nconst disableBtnAC = () => ({ type: 'DISABLE_BTN' });\r\n\r\nconst checkedToggleAC = (id) => ({ type: 'TOGGLE', payload: id });\r\nexport const showError = () => ({ type: 'SHOW_ERROR' });\r\nexport const showLoader = () => ({ type: 'SHOW_LOADER' });\r\nexport const hideLoader = () => ({ type: 'HIDE_LOADER' })\r\nconst addNodeAC = (node) => ({ type: 'ADD_NODE', payload: node });\r\nconst removeNodeAC = (id) => ({ type: 'REMOVE_NODE', payload: id });\r\nconst fetchNodes = (nodes) => ({ type: 'FETCH_NODES', payload: nodes });\r\n\r\n// ------------------- Basket -------------------------\r\nconst addInBasketAC = (node) => ({ type: 'ADD_IN_BASKET', payload: node });\r\nconst fetchBasket = (basket) => ({ type: 'FETCH_BASKET', payload: basket });\r\nconst removeBasketAC = (id) => ({ type: 'REMOVE_BASKET', payload: id });\r\n\r\n\r\n\r\n\r\nexport const enableBtn = () => (dispatch) => {\r\n    dispatch(enableBtnAC());\r\n}\r\n\r\nexport const disableBtn = () => (dispatch) => {\r\n    dispatch(disableBtnAC());\r\n}\r\n\r\n\r\nexport const getData = () => (dispatch) => {\r\n    dispatch(getNodes());\r\n    dispatch(getBasket());\r\n}\r\n\r\nexport const checkedToggle = (id) => (dispatch) => {\r\n    dispatch(checkedToggleAC(id));\r\n}\r\n\r\nexport const removeNode = (id) => async (dispatch) => {\r\n\r\n    const response = await api.removeNode(id);\r\n   \r\n    if (response === null) {\r\n        dispatch(removeNodeAC(id));\r\n    } else {\r\n        dispatch(showError());\r\n    }\r\n   \r\n}\r\n\r\nexport const removeSelected = (nodes) => (dispatch) => {\r\n\r\n    (async function () {\r\n        const promises = nodes.map(node => {\r\n            if (node.selected) {\r\n                const response = api.removeNode(node.id);\r\n                response.then(response => {\r\n                    if (response === null) {\r\n                        dispatch(removeNodeAC(node.id));\r\n                        // console.log('remove');\r\n                    } else {\r\n                        dispatch(showError());\r\n                    }\r\n                })\r\n            }\r\n            return node;\r\n        })\r\n        await Promise.all(promises);\r\n        // alert('done!');\r\n    })();\r\n}\r\n\r\n\r\nexport const getNodes = () => async (dispatch) => {\r\n\r\n    dispatch(showLoader());\r\n\r\n    const  response = await api.fetchNodes();\r\n  \r\n    if (response) {\r\n        const nodes = Object.keys(response).map(key => {\r\n            return {\r\n                ...response[key],\r\n                id: key\r\n            }\r\n        });\r\n        dispatch(fetchNodes(nodes));\r\n        dispatch(hideLoader());\r\n        // если response null - на сервере нет данных (корзина пуста)\r\n        // если response false - ошибка\r\n    } else if (response !== null) {\r\n        dispatch(showError());\r\n    } else if(response === null) {\r\n        dispatch(hideLoader());\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addNode = (payload) => async (dispatch) => {\r\n\r\n    const response = await api.addNode(payload);\r\n   \r\n    if (response) {\r\n        payload.id = response.name;\r\n        dispatch(addNodeAC(payload));\r\n    } else {\r\n        dispatch(showError());\r\n    }\r\n\r\n}\r\n\r\n\r\n// ------------------- Basket -------------------------\r\n\r\nexport const addInBasket = (payload) => async (dispatch) => {\r\n\r\n    const response = await basket_api.addBasket(payload);\r\n   \r\n    if (response) {\r\n        // payload.id = response.name;\r\n        dispatch(addInBasketAC(payload));\r\n        dispatch(removeNode(payload.id));\r\n        dispatch(enableBtnAC());\r\n    } else {\r\n        dispatch(showError());\r\n    }\r\n}\r\n\r\n\r\nexport const getBasket = () => async (dispatch) => {\r\n\r\n    dispatch(showLoader());\r\n\r\n    const response = await basket_api.fetchBasket();\r\n    \r\n        if (response) {\r\n            const basket = Object.keys(response).map(key => {\r\n                return {\r\n                    ...response[key],\r\n                    id: key\r\n                }\r\n            });\r\n\r\n            dispatch(fetchBasket(basket));\r\n            dispatch(hideLoader());\r\n            // если response null - на сервере нет данных (корзина пуста)\r\n            // если response false - ошибка\r\n        } else if (response !== null) {\r\n            dispatch(showError());\r\n        } else if(response === null) {\r\n            dispatch(hideLoader());\r\n        }\r\n}\r\n\r\nexport const removeBasket = (payload) => async (dispatch) => {\r\n\r\n    const response = await basket_api.removeBasket(payload.id);\r\n\r\n    if (response === null) {\r\n        dispatch(removeBasketAC(payload.id));\r\n        dispatch(addNode(payload));\r\n\r\n        // dispatch(getNodes());\r\n    } else {\r\n        dispatch(showError());\r\n    }\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport nodesReducer from './nodesReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst redusers = combineReducers({\r\n    nodes: nodesReducer\r\n    // auth: authReducer,\r\n    // app: appReducer\r\n});\r\n\r\n\r\nconst store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n// Применяя параметр applyMiddleware,\r\n// мы говорим Store - прими промежуточные слои\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\n\r\n\r\n\r\nconst ShoppingItem = (\r\n    {\r\n        date, title, id,\r\n        enableBtn,\r\n        disableBtn,\r\n        btnIsEnabled, \r\n        removeNode,\r\n        checkedToggle,\r\n        selected,\r\n        addInBasket\r\n    }\r\n    ) => {\r\n\r\n    const cls = ['todo'];\r\n\r\n    if (selected) {\r\n        cls.push('selected');\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n\r\n            <li className={cls.join(' ')}>\r\n                \r\n                <label>\r\n                    <input\r\n                        type='checkbox'\r\n                        checked={selected}\r\n                        onChange={(e) => checkedToggle(id)}\r\n                    />\r\n\r\n                    <span><b>{title}</b> <small>{date}</small></span>\r\n                    <div className={`waves-effect waves-light btn-flat deep-orange my-btn ${btnIsEnabled ? '' : 'disabled'}`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            addInBasket({ title, id })\r\n                            disableBtn();\r\n                        }}\r\n                    >\r\n                        <i className=\"material-icons center white-text\">\r\n                            shopping_cart\r\n                    </i>\r\n                    </div>\r\n                </label>\r\n            </li>\r\n       \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShoppingItem;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport ShoppingItem from './ShoppingItem';\r\nimport css from './../css.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport Toast from '../Toast/Toast';\r\n\r\n\r\n\r\n\r\nconst ShopingList = ({ nodes, isError, loading, ...props }) => {\r\n\r\n    const [nodeIsEmpty, setNodeEmpty] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if(nodes.length === 0) {\r\n            setNodeEmpty(true);\r\n         } else {\r\n             setNodeEmpty(false)\r\n        }\r\n    }, [nodes.length]);\r\n    \r\n\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            {/* <Toast text={'Товар добавлен в список!'} /> */}\r\n            \r\n            <div className={css.shoppingList}>\r\n                {!isError && loading \r\n                    ? <div className=\"progress\">\r\n                        <div className=\"indeterminate\"></div>\r\n                    </div>\r\n                    : !isError\r\n                        ? <TransitionGroup component='ul' className='listGroup'>\r\n                            {nodes.map(item =>\r\n                                <CSSTransition\r\n                                    key={item.id}\r\n                                    classNames={'node'}\r\n                                    timeout={500}>\r\n                                    <ShoppingItem {...item} {...props} />\r\n                                </CSSTransition>)}\r\n                        </TransitionGroup>\r\n                        : isError && <span>Ошибка загрузки данных с сервера!</span>}\r\n                {nodeIsEmpty && <div className={css.noItem}>Список покупок пуст</div>}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShopingList;","import React from 'react';\r\n\r\n\r\n\r\nconst BasketItem = ({ title, id, removeBasket }) => {\r\n\r\n    const cls = ['todo', 'basket'];\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <li className={cls.join(' ')}>\r\n            <label>\r\n           \r\n                <span><b>{title}</b></span>\r\n\r\n                <div className=\"waves-effect waves-light btn-flat deep-orange my-btn\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        removeBasket({title, id, selected: false});\r\n                        // addNode(id);\r\n                        \r\n                    }}\r\n                >\r\n                    <i className=\"material-icons center white-text\">\r\n                        list\r\n                    </i>\r\n                </div>\r\n\r\n            </label>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default BasketItem;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport BasketItem from './BasketItem';\r\nimport css from './../css.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\n\r\nconst BasketList = ({ isError, loading, basket, ...props }) => {\r\n    // console.log(props.nodes);\r\n    \r\n    const [basketIsEmpty, setBasketEmpty] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        if(basket.length === 0) {\r\n            setBasketEmpty(true);\r\n         } else {\r\n            setBasketEmpty(false)\r\n        }\r\n    }, [basket.length]);\r\n    \r\n    return (\r\n        <>\r\n            <div className={css.shoppingList}>\r\n                {!isError && loading\r\n                    ? <div className=\"progress\">\r\n                        <div className=\"indeterminate\"></div>\r\n                    </div>\r\n                    : !isError\r\n                        ? <TransitionGroup component='ul' className='listGroup'>\r\n                            {basket.map(item =>\r\n                                <CSSTransition\r\n                                    key={item.id}\r\n                                    classNames={'node'}\r\n                                    timeout={500}>\r\n                                    <BasketItem {...item} {...props} />\r\n                                </CSSTransition>)}\r\n                        </TransitionGroup>\r\n                        : <span>Ошибка загрузки данных с сервера!</span>}\r\n                    {basketIsEmpty && <div className={css.noItem}>Корзина пуста</div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BasketList;","import React from 'react';\r\nimport css from './footerBar.module.css';\r\n\r\nconst FooterBar = ({ removeSelected, nodes }) => {\r\n    return (\r\n        \r\n        <div className={css.footerBarWrapper}>\r\n            <div className='container'>\r\n\r\n                <div className={css.footerBarBtnContainer}>\r\n                    <div className='waves-effect waves-light btn-flat white'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            removeSelected(nodes);\r\n                        }}\r\n                    >\r\n                        <i className='material-icons center red-text'>delete_forever</i>\r\n                        {/* <span>удалить выделенное</span> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={css.footerBarBtnContainer}>\r\n                    <div className='waves-effect waves-light btn-flat white'\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            removeSelected(nodes);\r\n                        }}\r\n                    >\r\n                        <i className='material-icons center red-text'>select_all</i>\r\n                        {/* <span>удалить выделенное</span> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterBar;","import React, { useState } from 'react';\r\nimport css from './popupMnu.module.css';\r\n\r\n\r\n\r\nconst PopupMnu = ({removeSelected, nodes}) => {\r\n    const [isVisible, setVisible] = useState(false);\r\n\r\n    \r\n    return (\r\n        <div className={css.mnuWrapper}>\r\n            <div className={css.mnuBtn} onClick={() => setVisible(!isVisible)}>\r\n                <i className='material-icons white-text'>menu</i>\r\n            </div>\r\n            {isVisible &&\r\n                <div className={css.mnu}>\r\n                <ul>\r\n                    <li><i className='material-icons deep-orange-text'>tab_unselected</i>&nbsp;Снять выделение</li>\r\n                    <li><i className='material-icons deep-orange-text'>select_all</i>&nbsp;Выделить все</li>\r\n                    <li onClick={() => removeSelected(nodes)}><i className='material-icons deep-orange-text'>delete</i>&nbsp;Удалить выделенное</li>\r\n                    <li><i className='material-icons deep-orange-text'>delete_forever</i>&nbsp;Очистить список</li>\r\n                    <li><i className='material-icons deep-orange-text'>delete_forever</i>&nbsp;Очистить корзину</li>\r\n                </ul>\r\n                \r\n            </div>\r\n            }\r\n            \r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PopupMnu;","import React, { useState } from 'react';\r\nimport PopupMnu from '../Popup/PopupMnu';\r\nimport { NavLink } from 'react-router-dom';\r\nimport css from './header.module.css';\r\n\r\n\r\n\r\n// const setDate = () => {\r\n//   const options = {\r\n//     year: 'numeric',\r\n//     month: 'numeric',\r\n//     day: 'numeric',\r\n//     hour: 'numeric',\r\n//     minute: 'numeric',\r\n//     second: 'numeric',\r\n//     timezone: 'UTC'\r\n//   };\r\n//   return new Date().toLocaleString(\"ru\", options);\r\n// }\r\n\r\n\r\n\r\n\r\nconst Header = ({ addNode, len, ...props }) => {\r\n\r\n  const [todoTitle, setTodoTitle] = useState('');\r\n\r\n  const addTodo = (e) => {\r\n    if (e.key === 'Enter') {\r\n\r\n      if (todoTitle !== '') {\r\n        const payload = {\r\n          title: todoTitle,\r\n          // date: setDate(),\r\n          selected: false\r\n        }\r\n        addNode(payload);\r\n        setTodoTitle('');\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='fixed'>\r\n        <div className='container'>\r\n\r\n          <PopupMnu {...props} />\r\n\r\n          <div className={css.titleContainer}>\r\n            <div className={css.linkWrapper}>\r\n              <NavLink to='/list' className={css.navlink} activeClassName={css.activeRoute}>\r\n                {/* <i className=\"material-icons center white-text\">list</i> */}\r\n                ПОКУПКИ <span>({len.nodes})</span>\r\n              </NavLink>\r\n            </div>\r\n            <div className={css.linkWrapper}>\r\n              <NavLink to='/basket' className={css.navlink} activeClassName={css.activeRoute}>\r\n                {/* <i className=\"material-icons center white-text\">shopping_cart</i> */}\r\n                КОРЗИНА <span>({len.basket})</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className='input-field'>\r\n            <input\r\n              className='white-text'\r\n              value={todoTitle}\r\n              onChange={e => setTodoTitle(e.target.value)}\r\n              onKeyPress={addTodo}\r\n              type='text'\r\n            />\r\n            <label>Введите товар </label>\r\n            {/* <i className=\"material-icons\">add</i> */}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { enableBtn, disableBtn, removeBasket, getData, getBasket, addInBasket, showLoader, hideLoader, checkedToggle, addNode, removeNode, getNodes, showError, removeSelected } from './redux/nodesReducer';\r\nimport { connect } from 'react-redux';\r\nimport ShopingList from './components/Shop/ShopingList';\r\nimport BasketList from './components/Basket/BasketList';\r\nimport FooterBar from './components/FooterBar';\r\nimport Header from './components/Header/Header';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst App = ({ getData, ...props }) => {\r\n\r\n  useEffect(() => {\r\n    getData();\r\n\r\n  }, [])\r\n\r\n  const len = {\r\n    nodes: props.nodes.length,\r\n    basket: props.basket.length\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header len={len} {...props} />\r\n\r\n      <div className=\"container scroll\">\r\n        <Switch>\r\n          <Route exact path='/' render={() => <Redirect to={'/list'} />} />\r\n          <Route exact path='/list' render={() => <ShopingList {...props} />} />\r\n          <Route exact path='/basket' render={() => <BasketList {...props} />} />\r\n          <Route path='/*' render={() => <Redirect to={'/list'} /> } />\r\n        </Switch>\r\n        <div className='todiListFooterSpace'></div>\r\n      </div>\r\n\r\n      <FooterBar removeSelected={props.removeSelected} nodes={props.nodes} />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    nodes: state.nodes.nodes,\r\n    basket: state.nodes.basket,\r\n    loading: state.nodes.loading,\r\n    isError: state.nodes.isError,\r\n    btnIsEnabled: state.nodes.btnIsEnabled,\r\n  }\r\n)\r\n\r\n\r\nconst AppContainer = compose(\r\n\r\n  connect(mapStateToProps,\r\n    {\r\n      getNodes,\r\n      showLoader,\r\n      hideLoader,\r\n      checkedToggle,\r\n      addNode,\r\n      removeNode,\r\n      showError,\r\n      removeSelected,\r\n      addInBasket,\r\n      getBasket,\r\n      getData,\r\n      removeBasket,\r\n      enableBtn,\r\n      disableBtn,\r\n    }))(App);\r\n\r\n\r\n\r\nexport default AppContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'materialize-css';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\nimport AppContainer from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}